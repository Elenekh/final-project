<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Penguin Themed To-Do List</title>
    <link href="https://fonts.googleapis.com/css2?family=Quicksand:wght@400;600&display=swap" rel="stylesheet">
    <style>
        body {
            margin: 0;
            font-family: 'Quicksand', sans-serif;
            background: url('https://via.placeholder.com/1600x900/ffffff/000000?text=Penguin+Themed+Background') no-repeat center center fixed;
            background-size: cover;
            color: #333;
            display: flex;
            flex-direction: column;
            height: 100vh;
        }

        header {
            background-color: rgba(28, 133, 211, 0.9);
            color: white;
            padding: 20px;
            text-align: center;
            font-size: 2em;
        }

        .dashboard {
            display: flex;
            flex: 1;
            overflow: hidden;
        }

        .sidebar {
            background-color: rgba(28, 133, 211, 0.9);
            color: white;
            padding: 20px;
            width: 3.5cm;
            display: flex;
            flex-direction: column;
            gap: 10px;
            box-shadow: 2px 0 5px rgba(0, 0, 0, 0.1);
        }

        .sidebar h2 {
            font-size: 1.5em;
            margin: 0;
        }

        .sidebar ul {
            list-style: none;
            padding: 0;
            margin-top: 20px;
        }

        .sidebar ul li {
            margin-bottom: 10px;
            cursor: pointer;
            padding: 10px;
            background-color: #1c85d3;
            border-radius: 10px;
            text-align: center;
        }

        .sidebar ul li.active {
            background-color: #145a9e;
        }

        .content {
            flex: 1;
            padding: 20px;
            display: flex;
            flex-direction: column;
            gap: 20px;
            overflow-y: auto;
        }

        .todo-input {
            display: flex;
            justify-content: space-between;
            gap: 10px;
        }

        .todo-input input {
            flex: 1;
            padding: 10px;
            border: 2px solid #1c85d3;
            border-radius: 10px;
            font-size: 1em;
        }

        .todo-input button {
            padding: 10px;
            background-color: #1c85d3;
            color: white;
            border: none;
            border-radius: 10px;
            cursor: pointer;
            font-size: 1em;
        }

        .todo-input button:hover {
            background-color: #145a9e;
        }

        .board {
            display: flex;
            gap: 1cm;
            justify-content: flex-start;
            margin-left: 0;
        }

        .column {
            flex: 0 0 19.5%;
            background-color: rgba(255, 255, 255, 0.9);
            padding: 20px;
            border-radius: 15px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
            display: flex;
            flex-direction: column;
            gap: 10px;
            min-width: 200px;
        }

        .column h3 {
            text-align: center;
            background-color: #1c85d3;
            color: white;
            padding: 10px;
            border-radius: 10px;
        }

        .todo-list {
            flex: 1;
            overflow-y: auto;
            list-style: none;
            padding: 0;
        }

        .todo-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 10px;
            margin-bottom: 10px;
            background-color: #f9f9f9;
            cursor: move;
        }

        .todo-item button {
            background-color: #ff4d4d;
            color: white;
            border: none;
            border-radius: 5px;
            padding: 5px 10px;
            cursor: pointer;
        }

        .todo-item button:hover {
            background-color: #cc0000;
        }

        .todo-item.dragging {
            opacity: 0.5;
        }

        .column.over {
            background-color: #e0f7fa;
        }

        .page {
            display: none;
        }

        .page.active {
            display: block;
        }
    </style>
</head>
<body>
    <header>Waddle-Board</header>

    <div class="dashboard">
        <div class="sidebar">
            <h2>Menu</h2>
            <ul>
                <li class="menu-item active" onclick="showPage('dashboard')">Dashboard</li>
                <li class="menu-item" onclick="showPage('settings')">Settings</li>
                <li class="menu-item" onclick="showPage('profile')">Profile</li>
                <li class="menu-item" onclick="showPage('history')">History</li>
            </ul>
        </div>

        <div class="content" id="content">
            <div id="dashboard" class="page active">
                <div class="todo-input">
                    <input type="text" id="task-input" placeholder="Add a new task...">
                    <button onclick="addTask()">Add</button>
                </div>

                <div class="board">
                    <div class="column" id="todo-column" ondrop="drop(event)" ondragover="allowDrop(event)">
                        <h3>To Do</h3>
                        <ul id="todo-list" class="todo-list"></ul>
                    </div>

                    <div class="column" id="in-progress-column" ondrop="drop(event)" ondragover="allowDrop(event)">
                        <h3>In Progress</h3>
                        <ul id="in-progress-list" class="todo-list"></ul>
                    </div>

                    <div class="column" id="done-column" ondrop="drop(event)" ondragover="allowDrop(event)">
                        <h3>Done</h3>
                        <ul id="done-list" class="todo-list"></ul>
                    </div>
                </div>
            </div>

            <div id="settings" class="page">
                <h2>Settings Page</h2>
                <p>Here you can adjust your settings, such as theme or notifications.</p>
            </div>

            <div id="profile" class="page">
                <h2>Profile Page</h2>
                <p>Here you can view and edit your profile details, such as your name and email.</p>
            </div>

            <div id="history" class="page">
                <h2>History Page</h2>
                <p>This is where your past tasks and actions are stored. You can review your completed tasks here.</p>
            </div>
        </div>
    </div>

    <script>
        function showPage(page) {
            const pages = document.querySelectorAll('.page');
            pages.forEach(p => p.classList.remove('active'));
            document.getElementById(page).classList.add('active');
            const menuItems = document.querySelectorAll('.menu-item');
            menuItems.forEach(item => item.classList.remove('active'));
            const activeItem = document.querySelector(`.menu-item[onclick="showPage('${page}')"]`);
            activeItem.classList.add('active');
        }

        function addTask() {
            const input = document.getElementById('task-input');
            const taskText = input.value.trim();
            if (taskText === '') {
                alert('Please enter a task!');
                return;
            }
            const todoList = document.getElementById('todo-list');
            const taskItem = document.createElement('li');
            taskItem.className = 'todo-item';
            taskItem.draggable = true;
            taskItem.id = `task-${Date.now()}`;
            taskItem.innerHTML = `<span>${taskText}</span><div><button onclick="removeTask(this)">Delete</button></div>`;
            taskItem.addEventListener('dragstart', drag);
            taskItem.addEventListener('dragend', dragEnd);
            todoList.appendChild(taskItem);
            input.value = '';
        }

        function removeTask(button) {
            const taskItem = button.parentElement.parentElement;
            taskItem.remove();
        }

        function drag(event) {
            event.dataTransfer.setData("text", event.target.id);
            event.target.classList.add('dragging');
        }

        function dragEnd(event) {
            event.target.classList.remove('dragging');
        }

        function allowDrop(event) {
            event.preventDefault();
            const column = event.target.closest('.column');
            if (column) {
                column.classList.add('over');
            }
        }

        function drop(event) {
            event.preventDefault();
            const data = event.dataTransfer.getData("text");
            const draggedElement = document.getElementById(data);
            const targetColumn = event.target.closest('.column');
            if (targetColumn && draggedElement) {
                targetColumn.querySelector('ul').appendChild(draggedElement);
                draggedElement.classList.remove('dragging');
                targetColumn.classList.remove('over');
            }
        }

        document.getElementById('task-input').addEventListener('keydown', function(event) {
            if (event.key === 'Enter') {
                addTask();
            }
        });

        showPage('dashboard');
    </script>
</body>
</html>
